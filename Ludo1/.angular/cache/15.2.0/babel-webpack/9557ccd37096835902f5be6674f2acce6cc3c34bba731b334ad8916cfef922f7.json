{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet BoardComponent = class BoardComponent {\n  constructor() {\n    this.canPlay = true;\n    this.DieResult = 0;\n    this.turn = 1;\n    this.winvar = [0, 0, 0, 0];\n    this.GameBoard = {\n      pins: [{\n        id: 1,\n        ix: 2,\n        iy: 2,\n        x: 2,\n        y: 2,\n        ownerID: 1,\n        isPlaying: false,\n        direction: \"right\"\n      }, {\n        id: 2,\n        ix: 2,\n        iy: 3,\n        x: 2,\n        y: 3,\n        ownerID: 1,\n        isPlaying: false,\n        direction: \"right\"\n      }, {\n        id: 3,\n        ix: 3,\n        iy: 2,\n        x: 3,\n        y: 2,\n        ownerID: 1,\n        isPlaying: false,\n        direction: \"right\"\n      }, {\n        id: 4,\n        ix: 3,\n        iy: 3,\n        x: 3,\n        y: 3,\n        ownerID: 1,\n        isPlaying: false,\n        direction: \"right\"\n      }, {\n        id: 5,\n        ix: 11,\n        iy: 2,\n        x: 11,\n        y: 2,\n        ownerID: 2,\n        isPlaying: false,\n        direction: \"down\"\n      }, {\n        id: 6,\n        ix: 11,\n        iy: 3,\n        x: 11,\n        y: 3,\n        ownerID: 2,\n        isPlaying: false,\n        direction: \"down\"\n      }, {\n        id: 7,\n        ix: 12,\n        iy: 2,\n        x: 12,\n        y: 2,\n        ownerID: 2,\n        isPlaying: false,\n        direction: \"down\"\n      }, {\n        id: 8,\n        ix: 12,\n        iy: 3,\n        x: 12,\n        y: 3,\n        ownerID: 2,\n        isPlaying: false,\n        direction: \"down\"\n      }, {\n        id: 9,\n        ix: 11,\n        iy: 11,\n        x: 11,\n        y: 11,\n        ownerID: 3,\n        isPlaying: false,\n        direction: \"left\"\n      }, {\n        id: 10,\n        ix: 11,\n        iy: 12,\n        x: 11,\n        y: 12,\n        ownerID: 3,\n        isPlaying: false,\n        direction: \"left\"\n      }, {\n        id: 11,\n        ix: 12,\n        iy: 11,\n        x: 12,\n        y: 11,\n        ownerID: 3,\n        isPlaying: false,\n        direction: \"left\"\n      }, {\n        id: 12,\n        ix: 12,\n        iy: 12,\n        x: 12,\n        y: 12,\n        ownerID: 3,\n        isPlaying: false,\n        direction: \"left\"\n      }, {\n        id: 13,\n        ix: 2,\n        iy: 11,\n        x: 2,\n        y: 11,\n        ownerID: 4,\n        isPlaying: false,\n        direction: \"up\"\n      }, {\n        id: 14,\n        ix: 3,\n        iy: 11,\n        x: 3,\n        y: 11,\n        ownerID: 4,\n        isPlaying: false,\n        direction: \"up\"\n      }, {\n        id: 15,\n        ix: 2,\n        iy: 12,\n        x: 2,\n        y: 12,\n        ownerID: 4,\n        isPlaying: false,\n        direction: \"up\"\n      }, {\n        id: 16,\n        ix: 3,\n        iy: 12,\n        x: 3,\n        y: 12,\n        ownerID: 4,\n        isPlaying: false,\n        direction: \"up\"\n      }]\n    };\n  }\n  getBasePositon(onwer) {\n    switch (onwer) {\n      case 1:\n        let g = document.getElementById(\"gstart\");\n        return {\n          top: g.style.top,\n          left: g.style.left\n        };\n      case 2:\n        let y = document.getElementById(\"ystart\");\n        return {\n          top: y.style.top,\n          left: y.style.left\n        };\n      case 3:\n        let r = document.getElementById(\"bstart\");\n        return {\n          top: r.style.top,\n          left: r.style.left\n        };\n      case 4:\n        let b = document.getElementById(\"rstart\");\n        return {\n          top: b.style.top,\n          left: b.style.left\n        };\n      default:\n        return {\n          top: '0',\n          left: '0'\n        };\n    }\n  }\n  move(p) {\n    if (p.isPlaying) {\n      //Constraint for center overflow\n      if (p.x == 7 && p.y == 7) {\n        p.isPlaying = false;\n        return;\n      }\n      console.log(p.x, p.y); //For Debug Purpose\n      //directionConstraints for board turn movement\n      let directionConstraints = [{\n        x: 6,\n        y: 0,\n        direction: 'right'\n      }, {\n        x: 14,\n        y: 6,\n        direction: 'down'\n      }, {\n        x: 8,\n        y: 0,\n        direction: 'down'\n      }, {\n        x: 14,\n        y: 8,\n        direction: 'left'\n      }, {\n        x: 8,\n        y: 14,\n        direction: 'left'\n      }, {\n        x: 6,\n        y: 14,\n        direction: 'up'\n      }, {\n        x: 0,\n        y: 8,\n        direction: 'up'\n      }, {\n        x: 0,\n        y: 6,\n        direction: 'right'\n      }];\n      let ownerConstraints = [{\n        x: 0,\n        y: 7,\n        direction: 'right',\n        ownerID: 1\n      }, {\n        x: 7,\n        y: 0,\n        direction: 'down',\n        ownerID: 2\n      }, {\n        x: 14,\n        y: 7,\n        direction: 'left',\n        ownerID: 3\n      }, {\n        x: 7,\n        y: 14,\n        direction: 'up',\n        ownerID: 4\n      }];\n      let teleportConstraints = [{\n        x: 5,\n        y: 6,\n        x1: 6,\n        y1: 5,\n        direction: 'up'\n      }, {\n        x: 8,\n        y: 5,\n        x1: 9,\n        y1: 6,\n        direction: 'right'\n      }, {\n        x: 6,\n        y: 9,\n        x1: 5,\n        y1: 8,\n        direction: 'left'\n      }, {\n        x: 9,\n        y: 8,\n        x1: 8,\n        y1: 9,\n        direction: 'down'\n      }];\n      //Parse Direction\n      for (let c of directionConstraints) {\n        if (Math.floor(p.x) == c.x && Math.floor(p.y) == c.y) {\n          p.direction = c.direction;\n          break;\n        }\n      }\n      //Parse Teleport\n      for (let c of teleportConstraints) {\n        if (Math.floor(p.x) == c.x && Math.floor(p.y) == c.y) {\n          p.direction = c.direction;\n          p.x = c.x1;\n          p.y = c.y1;\n          return; //Movement is already done here, no need to move ahead for switch\n        }\n      }\n      //Owner based Constraint parser\n      for (let c of ownerConstraints) {\n        if (Math.floor(p.x) == c.x && Math.floor(p.y) == c.y && p.ownerID == c.ownerID) {\n          p.direction = c.direction;\n          break;\n        }\n      }\n      //Movement Parser\n      switch (p.direction) {\n        case 'left':\n          p.x -= 1;\n          break;\n        case 'right':\n          p.x += 1;\n          break;\n        case 'up':\n          p.y -= 1;\n          break;\n        case 'down':\n          p.y += 1;\n          break;\n      }\n    }\n  }\n  killCheck(pin) {\n    let safeZones = [{\n      x: 1,\n      y: 6\n    }, {\n      x: 6,\n      y: 2\n    }, {\n      x: 8,\n      y: 1\n    }, {\n      x: 12,\n      y: 6\n    }, {\n      x: 13,\n      y: 8\n    }, {\n      x: 8,\n      y: 12\n    }, {\n      x: 6,\n      y: 13\n    }, {\n      x: 2,\n      y: 8\n    }];\n    for (let c of safeZones) {\n      if (Math.floor(pin.x) == c.x && Math.floor(pin.y) == c.y) {\n        console.log(pin.id + \" is in safe Zone!\");\n        return;\n      }\n    }\n    for (let p of this.GameBoard.pins) {\n      if (Math.floor(p.x) == Math.floor(pin.x) && Math.floor(p.y) == Math.floor(pin.y) && p.id != pin.id && p.ownerID != pin.ownerID) {\n        console.log(\"Player \" + pin.ownerID + \"[\" + pin.id + \"]\" + \" killed \" + \"Player \" + p.ownerID + \"[\" + p.id + \"]\" + \"!\");\n        p.x = p.ix;\n        p.y = p.iy;\n        p.isPlaying = false;\n      }\n    }\n  }\n  processMove(n) {\n    for (let p of this.GameBoard.pins) {\n      if (!p.isPlaying && n == 6 && p.ownerID == this.turn) {\n        let res = this.getBasePositon(p.ownerID);\n        p.x = parseFloat(res.left) / 6.66;\n        p.y = parseFloat(res.top) / 6.66;\n        p.isPlaying = true;\n        this.canPlay = true;\n        this.turn = this.turn % 4 + 1;\n        this.killCheck(p);\n        break;\n      }\n    }\n  }\n  winCheck() {\n    for (let i = 0; i < 4; i++) {\n      if (this.winvar[i] == 4) {\n        alert(\"Player\" + (i + 1) + \" wins\");\n        location.reload();\n      }\n    }\n  }\n  CalculateStep(pin) {\n    if (!pin.isPlaying) {\n      return;\n    }\n    if (pin.ownerID == this.turn) {\n      for (let i = 0; i < this.DieResult; i++) {\n        this.move(pin);\n      }\n      this.canPlay = true;\n      this.turn = this.turn % 4 + 1;\n      this.killCheck(pin);\n      if (pin.x == 7 && pin.y == 7) {\n        pin.isPlaying = false;\n        this.winvar[pin.ownerID - 1]++;\n      }\n    }\n    this.winCheck();\n    //this.turn = ((this.turn) % 4) + 1;\n  }\n\n  CalculateTurn() {\n    let homePieces = 0;\n    for (let p of this.GameBoard.pins) {\n      if (p.ownerID == this.turn && !p.isPlaying) {\n        homePieces += 1;\n      }\n    }\n    if (homePieces == 4 && this.DieResult != 6) {\n      this.turn = this.turn % 4 + 1;\n    } else {\n      this.canPlay = false;\n      if (homePieces != 4) alert(\"Click to piece to move\");\n      this.processMove(this.DieResult);\n    }\n  }\n  RollDice() {\n    let min = 1;\n    let max = 6;\n    this.DieResult = min + Math.floor(Math.random() * (max - min + 1));\n    alert(\"Player\" + this.turn + \" rolled \" + this.DieResult);\n    this.CalculateTurn();\n  }\n  getColor(i) {\n    switch (i) {\n      case 1:\n        return '#66bb6a';\n      //green\n      case 2:\n        return '#fff176';\n      //yellow\n      case 3:\n        return 'blue';\n      //blue\n      case 4:\n        return '#e53935';\n      //yellow\n      default:\n        return 'black';\n    }\n  }\n};\nBoardComponent = __decorate([Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss']\n})], BoardComponent);\nexport { BoardComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAwBlC,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAApBC;IAEL,YAAO,GAAW,IAAI;IACtB,cAAS,GAAU,CAAC;IACpB,SAAI,GAAU,CAAC;IACf,WAAM,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;IAgOlB,cAAS,GAAU;MACjBC,IAAI,EAAE,CACJ;QAACC,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,CAAC;QAACC,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,CAAC;QAACC,OAAO,EAAC,CAAC;QAACC,SAAS,EAAC,KAAK;QAACC,SAAS,EAAC;MAAO,CAAC,EACpE;QAACP,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,CAAC;QAACC,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,CAAC;QAACC,OAAO,EAAC,CAAC;QAACC,SAAS,EAAC,KAAK;QAACC,SAAS,EAAC;MAAO,CAAC,EACpE;QAACP,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,CAAC;QAACC,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,CAAC;QAACC,OAAO,EAAC,CAAC;QAACC,SAAS,EAAC,KAAK;QAACC,SAAS,EAAC;MAAO,CAAC,EACpE;QAACP,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,CAAC;QAACC,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,CAAC;QAACC,OAAO,EAAC,CAAC;QAACC,SAAS,EAAC,KAAK;QAACC,SAAS,EAAC;MAAO,CAAC,EAEpE;QAACP,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,EAAE;QAACC,EAAE,EAAC,CAAC;QAACC,CAAC,EAAC,EAAE;QAACC,CAAC,EAAC,CAAC;QAACC,OAAO,EAAC,CAAC;QAACC,SAAS,EAAC,KAAK;QAACC,SAAS,EAAC;MAAM,CAAC,EACrE;QAACP,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,EAAE;QAACC,EAAE,EAAC,CAAC;QAACC,CAAC,EAAC,EAAE;QAACC,CAAC,EAAC,CAAC;QAACC,OAAO,EAAC,CAAC;QAACC,SAAS,EAAC,KAAK;QAACC,SAAS,EAAC;MAAM,CAAC,EACrE;QAACP,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,EAAE;QAACC,EAAE,EAAC,CAAC;QAACC,CAAC,EAAC,EAAE;QAACC,CAAC,EAAC,CAAC;QAACC,OAAO,EAAC,CAAC;QAACC,SAAS,EAAC,KAAK;QAACC,SAAS,EAAC;MAAM,CAAC,EACrE;QAACP,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,EAAE;QAACC,EAAE,EAAC,CAAC;QAACC,CAAC,EAAC,EAAE;QAACC,CAAC,EAAC,CAAC;QAACC,OAAO,EAAC,CAAC;QAACC,SAAS,EAAC,KAAK;QAACC,SAAS,EAAC;MAAM,CAAC,EAErE;QAACP,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,EAAE;QAACC,EAAE,EAAC,EAAE;QAACC,CAAC,EAAC,EAAE;QAACC,CAAC,EAAC,EAAE;QAACC,OAAO,EAAC,CAAC;QAACC,SAAS,EAAC,KAAK;QAACC,SAAS,EAAC;MAAM,CAAC,EACvE;QAACP,EAAE,EAAC,EAAE;QAACC,EAAE,EAAC,EAAE;QAACC,EAAE,EAAC,EAAE;QAACC,CAAC,EAAC,EAAE;QAACC,CAAC,EAAC,EAAE;QAACC,OAAO,EAAC,CAAC;QAACC,SAAS,EAAC,KAAK;QAACC,SAAS,EAAC;MAAM,CAAC,EACxE;QAACP,EAAE,EAAC,EAAE;QAACC,EAAE,EAAC,EAAE;QAACC,EAAE,EAAC,EAAE;QAACC,CAAC,EAAC,EAAE;QAACC,CAAC,EAAC,EAAE;QAACC,OAAO,EAAC,CAAC;QAACC,SAAS,EAAC,KAAK;QAACC,SAAS,EAAC;MAAM,CAAC,EACxE;QAACP,EAAE,EAAC,EAAE;QAACC,EAAE,EAAC,EAAE;QAACC,EAAE,EAAC,EAAE;QAACC,CAAC,EAAC,EAAE;QAACC,CAAC,EAAC,EAAE;QAACC,OAAO,EAAC,CAAC;QAACC,SAAS,EAAC,KAAK;QAACC,SAAS,EAAC;MAAM,CAAC,EAExE;QAACP,EAAE,EAAC,EAAE;QAACC,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,EAAE;QAACC,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,EAAE;QAACC,OAAO,EAAC,CAAC;QAACC,SAAS,EAAC,KAAK;QAACC,SAAS,EAAC;MAAI,CAAC,EACpE;QAACP,EAAE,EAAC,EAAE;QAACC,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,EAAE;QAACC,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,EAAE;QAACC,OAAO,EAAC,CAAC;QAACC,SAAS,EAAC,KAAK;QAACC,SAAS,EAAC;MAAI,CAAC,EACpE;QAACP,EAAE,EAAC,EAAE;QAACC,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,EAAE;QAACC,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,EAAE;QAACC,OAAO,EAAC,CAAC;QAACC,SAAS,EAAC,KAAK;QAACC,SAAS,EAAC;MAAI,CAAC,EACpE;QAACP,EAAE,EAAC,EAAE;QAACC,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,EAAE;QAACC,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,EAAE;QAACC,OAAO,EAAC,CAAC;QAACC,SAAS,EAAC,KAAK;QAACC,SAAS,EAAC;MAAI,CAAC;KAGvE;EACH;EAtPGC,cAAc,CAACC,KAAY;IAC1B,QAAOA,KAAK;MACV,KAAK,CAAC;QACJ,IAAIC,CAAC,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAE;QAC1C,OAAO;UAACC,GAAG,EAACH,CAAC,CAACI,KAAK,CAACD,GAAG;UAACE,IAAI,EAACL,CAAC,CAACI,KAAK,CAACC;QAAI,CAAC;MAC5C,KAAK,CAAC;QACJ,IAAIX,CAAC,GAAGO,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAE;QAC1C,OAAO;UAACC,GAAG,EAACT,CAAC,CAACU,KAAK,CAACD,GAAG;UAACE,IAAI,EAACX,CAAC,CAACU,KAAK,CAACC;QAAI,CAAC;MAC5C,KAAK,CAAC;QACJ,IAAIC,CAAC,GAAGL,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAE;QAC1C,OAAO;UAACC,GAAG,EAACG,CAAC,CAACF,KAAK,CAACD,GAAG;UAACE,IAAI,EAACC,CAAC,CAACF,KAAK,CAACC;QAAI,CAAC;MAC5C,KAAK,CAAC;QACJ,IAAIE,CAAC,GAAGN,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAE;QAC1C,OAAO;UAACC,GAAG,EAACI,CAAC,CAACH,KAAK,CAACD,GAAG;UAACE,IAAI,EAACE,CAAC,CAACH,KAAK,CAACC;QAAI,CAAC;MAC5C;QACE,OAAO;UAACF,GAAG,EAAC,GAAG;UAACE,IAAI,EAAC;QAAG,CAAC;IAAA;EAE/B;EAEAG,IAAI,CAACC,CAAK;IAER,IAAGA,CAAC,CAACb,SAAS,EAAC;MAEb;MACA,IAAGa,CAAC,CAAChB,CAAC,IAAI,CAAC,IAAIgB,CAAC,CAACf,CAAC,IAAI,CAAC,EAAE;QACvBe,CAAC,CAACb,SAAS,GAAG,KAAK;QACnB;;MAGFc,OAAO,CAACC,GAAG,CAACF,CAAC,CAAChB,CAAC,EAACgB,CAAC,CAACf,CAAC,CAAC,EAAC;MAErB;MACA,IAAIkB,oBAAoB,GAAG,CACzB;QAACnB,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,CAAC;QAACG,SAAS,EAAC;MAAO,CAAC,EAC3B;QAACJ,CAAC,EAAC,EAAE;QAACC,CAAC,EAAC,CAAC;QAACG,SAAS,EAAC;MAAM,CAAC,EAC3B;QAACJ,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,CAAC;QAACG,SAAS,EAAC;MAAM,CAAC,EAC1B;QAACJ,CAAC,EAAC,EAAE;QAACC,CAAC,EAAC,CAAC;QAACG,SAAS,EAAC;MAAM,CAAC,EAC3B;QAACJ,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,EAAE;QAACG,SAAS,EAAC;MAAM,CAAC,EAC3B;QAACJ,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,EAAE;QAACG,SAAS,EAAC;MAAI,CAAC,EACzB;QAACJ,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,CAAC;QAACG,SAAS,EAAC;MAAI,CAAC,EACxB;QAACJ,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,CAAC;QAACG,SAAS,EAAC;MAAO,CAAC,CAC5B;MAED,IAAIgB,gBAAgB,GAAG,CACrB;QAACpB,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,CAAC;QAACG,SAAS,EAAC,OAAO;QAACF,OAAO,EAAG;MAAC,CAAC,EACvC;QAACF,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,CAAC;QAACG,SAAS,EAAC,MAAM;QAACF,OAAO,EAAG;MAAC,CAAC,EACtC;QAACF,CAAC,EAAC,EAAE;QAACC,CAAC,EAAC,CAAC;QAACG,SAAS,EAAC,MAAM;QAACF,OAAO,EAAG;MAAC,CAAC,EACvC;QAACF,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,EAAE;QAACG,SAAS,EAAC,IAAI;QAACF,OAAO,EAAG;MAAC,CAAC,CACtC;MAED,IAAImB,mBAAmB,GAAG,CACxB;QAACrB,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,CAAC;QAACqB,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,CAAC;QAACnB,SAAS,EAAC;MAAI,CAAC,EAClC;QAACJ,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,CAAC;QAACqB,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,CAAC;QAACnB,SAAS,EAAC;MAAO,CAAC,EACrC;QAACJ,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,CAAC;QAACqB,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,CAAC;QAACnB,SAAS,EAAC;MAAM,CAAC,EACpC;QAACJ,CAAC,EAAC,CAAC;QAACC,CAAC,EAAC,CAAC;QAACqB,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC,CAAC;QAACnB,SAAS,EAAC;MAAM,CAAC,CACrC;MAED;MACA,KAAK,IAAIoB,CAAC,IAAIL,oBAAoB,EAAC;QAEjC,IAAGM,IAAI,CAACC,KAAK,CAACV,CAAC,CAAChB,CAAC,CAAC,IAAEwB,CAAC,CAACxB,CAAC,IAAIyB,IAAI,CAACC,KAAK,CAACV,CAAC,CAACf,CAAC,CAAC,IAAGuB,CAAC,CAACvB,CAAC,EAAC;UAC/Ce,CAAC,CAACZ,SAAS,GAAGoB,CAAC,CAACpB,SAAS;UACzB;;;MAIJ;MACA,KAAK,IAAIoB,CAAC,IAAIH,mBAAmB,EAAC;QAChC,IAAGI,IAAI,CAACC,KAAK,CAACV,CAAC,CAAChB,CAAC,CAAC,IAAEwB,CAAC,CAACxB,CAAC,IAAIyB,IAAI,CAACC,KAAK,CAACV,CAAC,CAACf,CAAC,CAAC,IAAGuB,CAAC,CAACvB,CAAC,EAAC;UAC/Ce,CAAC,CAACZ,SAAS,GAAGoB,CAAC,CAACpB,SAAS;UACzBY,CAAC,CAAChB,CAAC,GAAGwB,CAAC,CAACF,EAAE;UAAEN,CAAC,CAACf,CAAC,GAAGuB,CAAC,CAACD,EAAE;UACtB,OAAO,CAAC;;;MAIX;MACD,KAAK,IAAIC,CAAC,IAAIJ,gBAAgB,EAAC;QAC7B,IAAGK,IAAI,CAACC,KAAK,CAACV,CAAC,CAAChB,CAAC,CAAC,IAAEwB,CAAC,CAACxB,CAAC,IAAIyB,IAAI,CAACC,KAAK,CAACV,CAAC,CAACf,CAAC,CAAC,IAAGuB,CAAC,CAACvB,CAAC,IAAIe,CAAC,CAACd,OAAO,IAAIsB,CAAC,CAACtB,OAAO,EAAC;UACzEc,CAAC,CAACZ,SAAS,GAAGoB,CAAC,CAACpB,SAAS;UACzB;;;MAIJ;MACA,QAAQY,CAAC,CAACZ,SAAS;QACjB,KAAK,MAAM;UACTY,CAAC,CAAChB,CAAC,IAAE,CAAC;UACN;QACF,KAAK,OAAO;UACVgB,CAAC,CAAChB,CAAC,IAAE,CAAC;UACN;QACF,KAAK,IAAI;UACPgB,CAAC,CAACf,CAAC,IAAE,CAAC;UACN;QACF,KAAK,MAAM;UACTe,CAAC,CAACf,CAAC,IAAE,CAAC;UACN;MAAM;;EAId;EAEA0B,SAAS,CAACC,GAAO;IAEf,IAAIC,SAAS,GAAG,CACd;MAAC7B,CAAC,EAAC,CAAC;MAACC,CAAC,EAAC;IAAC,CAAC,EACT;MAACD,CAAC,EAAC,CAAC;MAACC,CAAC,EAAC;IAAC,CAAC,EACT;MAACD,CAAC,EAAC,CAAC;MAACC,CAAC,EAAC;IAAC,CAAC,EACT;MAACD,CAAC,EAAC,EAAE;MAACC,CAAC,EAAC;IAAC,CAAC,EACV;MAACD,CAAC,EAAC,EAAE;MAACC,CAAC,EAAC;IAAC,CAAC,EACV;MAACD,CAAC,EAAC,CAAC;MAACC,CAAC,EAAC;IAAE,CAAC,EACV;MAACD,CAAC,EAAC,CAAC;MAACC,CAAC,EAAC;IAAE,CAAC,EACV;MAACD,CAAC,EAAC,CAAC;MAACC,CAAC,EAAC;IAAC,CAAC,CACV;IAED,KAAI,IAAIuB,CAAC,IAAIK,SAAS,EAAC;MACrB,IAAGJ,IAAI,CAACC,KAAK,CAACE,GAAG,CAAC5B,CAAC,CAAC,IAAIwB,CAAC,CAACxB,CAAC,IAAIyB,IAAI,CAACC,KAAK,CAACE,GAAG,CAAC3B,CAAC,CAAC,IAAIuB,CAAC,CAACvB,CAAC,EAAC;QACtDgB,OAAO,CAACC,GAAG,CAACU,GAAG,CAAC/B,EAAE,GAAG,mBAAmB,CAAC;QACzC;;;IAIJ,KAAI,IAAImB,CAAC,IAAI,IAAI,CAACc,SAAS,CAAClC,IAAI,EAAC;MAC/B,IAAG6B,IAAI,CAACC,KAAK,CAACV,CAAC,CAAChB,CAAC,CAAC,IAAIyB,IAAI,CAACC,KAAK,CAACE,GAAG,CAAC5B,CAAC,CAAC,IAAIyB,IAAI,CAACC,KAAK,CAACV,CAAC,CAACf,CAAC,CAAC,IAAIwB,IAAI,CAACC,KAAK,CAACE,GAAG,CAAC3B,CAAC,CAAC,IAAIe,CAAC,CAACnB,EAAE,IAAE+B,GAAG,CAAC/B,EAAE,IAAImB,CAAC,CAACd,OAAO,IAAE0B,GAAG,CAAC1B,OAAO,EAAC;QACxHe,OAAO,CAACC,GAAG,CAAC,SAAS,GAAEU,GAAG,CAAC1B,OAAO,GAAC,GAAG,GAAC0B,GAAG,CAAC/B,EAAE,GAAC,GAAG,GAAE,UAAU,GAAE,SAAS,GAAEmB,CAAC,CAACd,OAAO,GAAC,GAAG,GAACc,CAAC,CAACnB,EAAE,GAAC,GAAG,GAAC,GAAG,CAAC;QACrGmB,CAAC,CAAChB,CAAC,GAAGgB,CAAC,CAAClB,EAAE;QACVkB,CAAC,CAACf,CAAC,GAAGe,CAAC,CAACjB,EAAE;QACViB,CAAC,CAACb,SAAS,GAAG,KAAK;;;EAGzB;EAEA4B,WAAW,CAACC,CAAQ;IAClB,KAAK,IAAIhB,CAAC,IAAI,IAAI,CAACc,SAAS,CAAClC,IAAI,EAAE;MACjC,IAAG,CAACoB,CAAC,CAACb,SAAS,IAAI6B,CAAC,IAAE,CAAC,IAAIhB,CAAC,CAACd,OAAO,IAAI,IAAI,CAAC+B,IAAI,EAAC;QAChD,IAAIC,GAAG,GAAG,IAAI,CAAC7B,cAAc,CAACW,CAAC,CAACd,OAAO,CAAC;QACxCc,CAAC,CAAChB,CAAC,GAAGmC,UAAU,CAACD,GAAG,CAACtB,IAAI,CAAC,GAAC,IAAI;QAC/BI,CAAC,CAACf,CAAC,GAAGkC,UAAU,CAACD,GAAG,CAACxB,GAAG,CAAC,GAAC,IAAI;QAC9BM,CAAC,CAACb,SAAS,GAAE,IAAI;QACjB,IAAI,CAACiC,OAAO,GAAG,IAAI;QACnB,IAAI,CAACH,IAAI,GAAK,IAAI,CAACA,IAAI,GAAI,CAAC,GAAI,CAAC;QACjC,IAAI,CAACN,SAAS,CAACX,CAAC,CAAC;QACjB;;;EAIN;EAEAqB,QAAQ;IACN,KAAK,IAAIC,CAAC,GAAE,CAAC,EAACA,CAAC,GAAC,CAAC,EAACA,CAAC,EAAE,EAAC;MACpB,IAAI,IAAI,CAACC,MAAM,CAACD,CAAC,CAAC,IAAI,CAAC,EAAE;QACvBE,KAAK,CAAC,QAAQ,IAAIF,CAAC,GAAC,CAAC,CAAC,GAAE,OAAO,CAAC;QAChCG,QAAQ,CAACC,MAAM,EAAE;;;EAGvB;EAEAC,aAAa,CAACf,GAAO;IAEnB,IAAG,CAACA,GAAG,CAACzB,SAAS,EAAC;MAChB;;IAEF,IAAGyB,GAAG,CAAC1B,OAAO,IAAI,IAAI,CAAC+B,IAAI,EAAC;MAC1B,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACM,SAAS,EAAEN,CAAC,EAAE,EAAE;QACvC,IAAI,CAACvB,IAAI,CAACa,GAAG,CAAC;;MAEhB,IAAI,CAACQ,OAAO,GAAG,IAAI;MACnB,IAAI,CAACH,IAAI,GAAK,IAAI,CAACA,IAAI,GAAI,CAAC,GAAI,CAAC;MACjC,IAAI,CAACN,SAAS,CAACC,GAAG,CAAC;MACnB,IAAGA,GAAG,CAAC5B,CAAC,IAAI,CAAC,IAAI4B,GAAG,CAAC3B,CAAC,IAAI,CAAC,EAAC;QAC1B2B,GAAG,CAACzB,SAAS,GAAG,KAAK;QACrB,IAAI,CAACoC,MAAM,CAACX,GAAG,CAAC1B,OAAO,GAAC,CAAC,CAAC,EAAE;;;IAIhC,IAAI,CAACmC,QAAQ,EAAE;IACf;EACF;;EAEAQ,aAAa;IACX,IAAIC,UAAU,GAAG,CAAC;IAClB,KAAI,IAAI9B,CAAC,IAAI,IAAI,CAACc,SAAS,CAAClC,IAAI,EAAC;MAC/B,IAAGoB,CAAC,CAACd,OAAO,IAAI,IAAI,CAAC+B,IAAI,IAAI,CAACjB,CAAC,CAACb,SAAS,EAAC;QACxC2C,UAAU,IAAE,CAAC;;;IAGjB,IAAGA,UAAU,IAAI,CAAC,IAAI,IAAI,CAACF,SAAS,IAAE,CAAC,EAAC;MACtC,IAAI,CAACX,IAAI,GAAK,IAAI,CAACA,IAAI,GAAI,CAAC,GAAI,CAAC;KAClC,MAAI;MACH,IAAI,CAACG,OAAO,GAAG,KAAK;MACpB,IAAGU,UAAU,IAAE,CAAC,EAChBN,KAAK,CAAC,wBAAwB,CAAC;MAC/B,IAAI,CAACT,WAAW,CAAC,IAAI,CAACa,SAAS,CAAC;;EAIpC;EAEAG,QAAQ;IACN,IAAIC,GAAG,GAAG,CAAC;IACX,IAAIC,GAAG,GAAG,CAAC;IACX,IAAI,CAACL,SAAS,GAAGI,GAAG,GAAGvB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,MAAM,EAAE,IAAID,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC;IAClER,KAAK,CAAC,QAAQ,GAAG,IAAI,CAACP,IAAI,GAAG,UAAU,GAAG,IAAI,CAACW,SAAS,CAAC;IACzD,IAAI,CAACC,aAAa,EAAE;EAEtB;EAECM,QAAQ,CAACb,CAAQ;IAChB,QAAOA,CAAC;MACN,KAAK,CAAC;QACJ,OAAO,SAAS;MAAC;MACnB,KAAK,CAAC;QACJ,OAAO,SAAS;MAAC;MACnB,KAAK,CAAC;QACJ,OAAO,MAAM;MAAC;MAChB,KAAK,CAAC;QACJ,OAAO,SAAS;MAAC;MACnB;QACE,OAAO,OAAO;IAAA;EAEpB;CA0BD;AA7PY5C,cAAc,eAL1BD,SAAS,CAAC;EACT2D,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GACW5D,cAAc,CA6P1B;SA7PYA,cAAc","names":["Component","BoardComponent","constructor","pins","id","ix","iy","x","y","ownerID","isPlaying","direction","getBasePositon","onwer","g","document","getElementById","top","style","left","r","b","move","p","console","log","directionConstraints","ownerConstraints","teleportConstraints","x1","y1","c","Math","floor","killCheck","pin","safeZones","GameBoard","processMove","n","turn","res","parseFloat","canPlay","winCheck","i","winvar","alert","location","reload","CalculateStep","DieResult","CalculateTurn","homePieces","RollDice","min","max","random","getColor","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\n.dara\\Downloads\\LudoAngular-main\\src\\app\\board\\board.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\ninterface Pin {\n  direction:string,\n  ix: number,\n  iy: number\n  x: number,\n  y: number,\n  ownerID:number,\n  isPlaying: boolean,\n  id:number\n\n}\ninterface Board {\n\n  pins : Pin[]\n\n}\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss']\n})\nexport class BoardComponent {\n\n  canPlay:Boolean = true;\n  DieResult:number = 0;\n  turn:number = 1;\n  winvar = [0,0,0,0]\n\n   getBasePositon(onwer:number){\n    switch(onwer){\n      case 1:\n        let g = document.getElementById(\"gstart\")!;\n        return {top:g.style.top,left:g.style.left};\n      case 2:\n        let y = document.getElementById(\"ystart\")!;\n        return {top:y.style.top,left:y.style.left};\n      case 3:\n        let r = document.getElementById(\"bstart\")!;\n        return {top:r.style.top,left:r.style.left};\n      case 4:\n        let b = document.getElementById(\"rstart\")!;\n        return {top:b.style.top,left:b.style.left};\n      default:\n        return {top:'0',left:'0'}\n    }\n  }\n\n  move(p:Pin){\n\n    if(p.isPlaying){\n\n      //Constraint for center overflow\n      if(p.x == 7 && p.y == 7) {\n        p.isPlaying = false\n        return;\n      }\n\n      console.log(p.x,p.y) //For Debug Purpose\n\n      //directionConstraints for board turn movement\n      let directionConstraints = [\n        {x:6,y:0,direction:'right'},\n        {x:14,y:6,direction:'down'},\n        {x:8,y:0,direction:'down'},\n        {x:14,y:8,direction:'left'},\n        {x:8,y:14,direction:'left'},\n        {x:6,y:14,direction:'up'},\n        {x:0,y:8,direction:'up'},\n        {x:0,y:6,direction:'right'},\n      ]\n\n      let ownerConstraints = [\n        {x:0,y:7,direction:'right',ownerID : 1},\n        {x:7,y:0,direction:'down',ownerID : 2},\n        {x:14,y:7,direction:'left',ownerID : 3},\n        {x:7,y:14,direction:'up',ownerID : 4},\n      ]\n\n      let teleportConstraints = [\n        {x:5,y:6,x1:6,y1:5,direction:'up'},\n        {x:8,y:5,x1:9,y1:6,direction:'right'},\n        {x:6,y:9,x1:5,y1:8,direction:'left'},\n        {x:9,y:8,x1:8,y1:9,direction:'down'},\n      ]\n\n      //Parse Direction\n      for( let c of directionConstraints){\n\n        if(Math.floor(p.x)==c.x && Math.floor(p.y) ==c.y){\n          p.direction = c.direction;\n          break;\n        }\n      }\n\n      //Parse Teleport\n      for( let c of teleportConstraints){\n        if(Math.floor(p.x)==c.x && Math.floor(p.y) ==c.y){\n          p.direction = c.direction;\n          p.x = c.x1; p.y = c.y1;\n          return; //Movement is already done here, no need to move ahead for switch\n        }\n      }\n\n       //Owner based Constraint parser\n      for( let c of ownerConstraints){\n        if(Math.floor(p.x)==c.x && Math.floor(p.y) ==c.y && p.ownerID == c.ownerID){\n          p.direction = c.direction;\n          break;\n        }\n      }\n\n      //Movement Parser\n      switch (p.direction) {\n        case 'left':\n          p.x-=1\n          break;\n        case 'right':\n          p.x+=1\n          break;\n        case 'up':\n          p.y-=1\n          break;\n        case 'down':\n          p.y+=1\n          break;\n      }\n\n    }\n  }\n\n  killCheck(pin:Pin){\n\n    let safeZones = [\n      {x:1,y:6},\n      {x:6,y:2},\n      {x:8,y:1},\n      {x:12,y:6},\n      {x:13,y:8},\n      {x:8,y:12},\n      {x:6,y:13},\n      {x:2,y:8},\n    ]\n\n    for(let c of safeZones){\n      if(Math.floor(pin.x) == c.x && Math.floor(pin.y) == c.y){\n        console.log(pin.id + \" is in safe Zone!\")\n        return;\n      }\n    }\n\n    for(let p of this.GameBoard.pins){\n      if(Math.floor(p.x) == Math.floor(pin.x) && Math.floor(p.y) == Math.floor(pin.y) && p.id!=pin.id && p.ownerID!=pin.ownerID){\n        console.log(\"Player \"+ pin.ownerID+\"[\"+pin.id+\"]\" +\" killed \"+ \"Player \"+ p.ownerID+\"[\"+p.id+\"]\"+\"!\")\n        p.x = p.ix;\n        p.y = p.iy;\n        p.isPlaying = false;\n      }\n    }\n  }\n\n  processMove(n:number){\n    for (let p of this.GameBoard.pins ){\n      if(!p.isPlaying && n==6 && p.ownerID == this.turn){\n        let res = this.getBasePositon(p.ownerID) ;\n        p.x = parseFloat(res.left)/6.66;\n        p.y = parseFloat(res.top)/6.66;\n        p.isPlaying= true\n        this.canPlay = true;\n        this.turn = ((this.turn) % 4) + 1;\n        this.killCheck(p)\n        break;\n      }\n    }\n\n  }\n\n  winCheck(){\n    for (let i =0;i<4;i++){\n      if (this.winvar[i] == 4 ){\n        alert(\"Player\" + (i+1) +\" wins\")\n        location.reload();\n      }\n    }\n  }\n\n  CalculateStep(pin:Pin){\n\n    if(!pin.isPlaying){\n      return;\n    }\n    if(pin.ownerID == this.turn){\n      for (let i = 0; i < this.DieResult; i++) {\n        this.move(pin)\n      }\n      this.canPlay = true;\n      this.turn = ((this.turn) % 4) + 1;\n      this.killCheck(pin)\n      if(pin.x == 7 && pin.y == 7){\n        pin.isPlaying = false\n        this.winvar[pin.ownerID-1]++\n      }\n\n    }\n    this.winCheck()\n    //this.turn = ((this.turn) % 4) + 1;\n  }\n\n  CalculateTurn(){\n    let homePieces = 0;\n    for(let p of this.GameBoard.pins){\n      if(p.ownerID == this.turn && !p.isPlaying){\n        homePieces+=1\n      }\n    }\n    if(homePieces == 4 && this.DieResult!=6){\n      this.turn = ((this.turn) % 4) + 1;\n    }else{\n      this.canPlay = false\n      if(homePieces!=4)\n      alert(\"Click to piece to move\")\n      this.processMove(this.DieResult);\n\n    }\n\n  }\n\n  RollDice() {\n    let min = 1;\n    let max = 6;\n    this.DieResult = min + Math.floor(Math.random() * (max - min + 1));\n    alert(\"Player\" + this.turn + \" rolled \" + this.DieResult)\n    this.CalculateTurn();\n\n  }\n\n   getColor(i:number) {\n    switch(i){\n      case 1:\n        return '#66bb6a' //green\n      case 2:\n        return '#fff176' //yellow\n      case 3:\n        return 'blue' //blue\n      case 4:\n        return '#e53935' //yellow\n      default:\n        return 'black'\n    }\n  }\n\n  GameBoard: Board = {\n    pins: [\n      {id:1,ix:2,iy:2,x:2,y:2,ownerID:1,isPlaying:false,direction:\"right\"},\n      {id:2,ix:2,iy:3,x:2,y:3,ownerID:1,isPlaying:false,direction:\"right\"},\n      {id:3,ix:3,iy:2,x:3,y:2,ownerID:1,isPlaying:false,direction:\"right\"},\n      {id:4,ix:3,iy:3,x:3,y:3,ownerID:1,isPlaying:false,direction:\"right\"},\n\n      {id:5,ix:11,iy:2,x:11,y:2,ownerID:2,isPlaying:false,direction:\"down\"},\n      {id:6,ix:11,iy:3,x:11,y:3,ownerID:2,isPlaying:false,direction:\"down\"},\n      {id:7,ix:12,iy:2,x:12,y:2,ownerID:2,isPlaying:false,direction:\"down\"},\n      {id:8,ix:12,iy:3,x:12,y:3,ownerID:2,isPlaying:false,direction:\"down\"},\n\n      {id:9,ix:11,iy:11,x:11,y:11,ownerID:3,isPlaying:false,direction:\"left\"},\n      {id:10,ix:11,iy:12,x:11,y:12,ownerID:3,isPlaying:false,direction:\"left\"},\n      {id:11,ix:12,iy:11,x:12,y:11,ownerID:3,isPlaying:false,direction:\"left\"},\n      {id:12,ix:12,iy:12,x:12,y:12,ownerID:3,isPlaying:false,direction:\"left\"},\n\n      {id:13,ix:2,iy:11,x:2,y:11,ownerID:4,isPlaying:false,direction:\"up\"},\n      {id:14,ix:3,iy:11,x:3,y:11,ownerID:4,isPlaying:false,direction:\"up\"},\n      {id:15,ix:2,iy:12,x:2,y:12,ownerID:4,isPlaying:false,direction:\"up\"},\n      {id:16,ix:3,iy:12,x:3,y:12,ownerID:4,isPlaying:false,direction:\"up\"},\n\n    ]\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}